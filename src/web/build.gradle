plugins {
    id("com.github.johnrengelman.shadow")
    id("io.micronaut.application")
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("ch.swaechter.libreshare.web.*")
    }
}

dependencies {
    // Web core
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("javax.annotation:javax.annotation-api")
    implementation("com.google.code.findbugs:jsr305")

    // Web management
    annotationProcessor("io.micronaut:micronaut-management")

    // Web security
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("org.mindrot:jbcrypt:0.4")

    // Web OpenAPI
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut.openapi:micronaut-openapi")
    implementation("io.swagger.core.v3:swagger-annotations")

    // Database layer
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    runtimeOnly("org.postgresql:postgresql")

    // Logging
    runtimeOnly("ch.qos.logback:logback-classic")

    // Testing
    testRuntimeOnly("org.testcontainers:postgresql")
}

application {
    mainClass.set("ch.swaechter.libreshare.web.Application")
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << "-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop"
    options.forkOptions.jvmArgs << "-Dmicronaut.openapi.additional.files=src/test/resources/swagger"
    options.forkOptions.jvmArgs << "-Dfile.encoding=UTF8"
}

tasks.distZip.enabled = false
tasks.distTar.enabled = false
tasks.shadowDistZip.enabled = false
tasks.shadowDistTar.enabled = false
